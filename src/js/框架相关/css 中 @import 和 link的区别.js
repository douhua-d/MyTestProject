//在 CSS 中，@import 和 <link> 都可以用来引入外部样式表，但它们之间存在一些重要的区别。以下是对这两种方式的详细比较：


//@import
// 
// 使用语法：@import url('style.css')  './index.css';
// 放置位置：必须在 CSS 文件的开头，且在任何其他样式规则之前。

// <link>
// 
// 使用语法：<link rel="stylesheet" href="style.css">
// 放置位置：放在 HTML 文件的 <head> 部分。
// <head>
//   <link rel="stylesheet" href="style.css">
// </head>

// 加载顺序与性能
/**
 * @import
 *
 * 浏览器需要先解析包含 @import 的 CSS 文件，然后再发起对被引入的 CSS 文件的请求。这可能导致额外的延迟。
 * 不适合大项目或需要优化加载时间的场景。
 * 在网络速度较慢的环境下，会出现 FOUC（无样式内容闪烁）的情况。
 * 
 * 
 * <link>
 *
 * 浏览器在解析 HTML 时，遇到 <link> 标签就会立即发起对 CSS 文件的请求，加载过程更快。
 * 更适合大项目以及需要优化加载时间的场景。
 * 避免了 @import 可能带来的延迟问题。
 */

// @import
// 
// 较老的浏览器（如 IE 5 或更早版本）可能不完全支持 @import。
// 在现代浏览器中已广泛支持。
// <link>   兼容性更好
// 
// 从一开始就被广泛支持，几乎所有浏览器都支持。

// 为什么 @import 能处理 CSS 预处理器，而 <link> 标签不能引用 SCSS？
// @import 在预处理器中的作用
// 模块化管理：在 Sass 或 Less 中，@import 允许你将样式拆分成多个文件，按需引入。这种模块化管理使得样式的维护和组织更加简便。
// 编译时合并：当使用 @import 在预处理器中导入文件时，预处理器会在编译阶段将所有导入的文件合并成一个单一的 CSS 文件，从而减少 HTTP 请求数量。
// 变量和混入（mixins）：在预处理器中，@import 允许你在不同的文件中共享变量和混入，从而提高样式的重用性和一致性。

/**
 * <link> 标签的限制
 * 仅限于 CSS：<link> 标签只能用于引用纯 CSS 文件。浏览器直接解析和加载这些文件，因此它们无法识别或处理 Sass、Less 等预处理器语言。
 * 无编译能力：<link> 标签不会对引用的文件进行任何预处理或编译。它只是简单地请求并加载这些文件。因此，无法使用 <link> 直接引用 .scss 或 .less 文件。
 * 分散的加载：使用 <link> 标签会导致每个引用的 CSS 文件都需要单独的 HTTP 请求，这在一定程度上增加了页面加载时间，尤其是当文件较多时。
 */